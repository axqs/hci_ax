from django.shortcuts import render
from django.http import HttpResponse
from django.template import loader
import json

# Create your views here.
current_country = ''
countries = ["Afghanistan",
"Albania",
"Algeria",
"Andorra",
"Angola",
"Antigua & Deps",
"Argentina",
"Armenia",
"Australia",
"Austria",
"Azerbaijan",
"Bahamas",
"Bahrain",
"Bangladesh",
"Barbados",
"Belarus",
"Belgium",
"Belize",
"Benin",
"Bhutan",
"Bolivia",
"Bosnia Herzegovina",
"Botswana",
"Brazil",
"Brunei",
"Bulgaria",
"Burkina",
"Burundi",
"Cambodia",
"Cameroon",
"Canada",
"Cape Verde",
"Central African Rep",
"Chad",
"Chile",
"China",
"Colombia",
"Comoros",
"Congo",
"Congo",
"Costa Rica",
"Croatia",
"Cuba",
"Cyprus",
"Czech Republic",
"Denmark",
"Djibouti",
"Dominica",
"Dominican Republic",
"East Timor",
"Ecuador",
"Egypt",
"El Salvador",
"Equatorial Guinea",
"Eritrea",
"Estonia",
"Ethiopia",
"Fiji",
"Finland",
"France",
"Gabon",
"Gambia",
"Georgia",
"Germany",
"Ghana",
"Greece",
"Grenada",
"Guatemala",
"Guinea",
"Guinea-Bissau",
"Guyana",
"Haiti",
"Honduras",
"Hungary",
"Iceland",
"India",
"Indonesia",
"Iran",
"Iraq",
"Ireland",
"Israel",
"Italy",
"Ivory Coast",
"Jamaica",
"Japan",
"Jordan",
"Kazakhstan",
"Kenya",
"Kiribati",
"Korea North",
"Korea South",
"Kosovo",
"Kuwait",
"Kyrgyzstan",
"Laos",
"Latvia",
"Lebanon",
"Lesotho",
"Liberia",
"Libya",
"Liechtenstein",
"Lithuania",
"Luxembourg",
"Macedonia",
"Madagascar",
"Malawi",
"Malaysia",
"Maldives",
"Mali",
"Malta",
"Marshall Islands",
"Mauritania",
"Mauritius",
"Mexico",
"Micronesia",
"Moldova",
"Monaco",
"Mongolia",
"Montenegro",
"Morocco",
"Mozambique",
"Myanmar,",
"Namibia",
"Nauru",
"Nepal",
"Netherlands",
"New Zealand",
"Nicaragua",
"Niger",
"Nigeria",
"Norway",
"Oman",
"Pakistan",
"Palau",
"Panama",
"Papua New Guinea",
"Paraguay",
"Peru",
"Philippines",
"Poland",
"Portugal",
"Qatar",
"Romania",
"Russian Federation",
"Rwanda",
"St Kitts & Nevis",
"St Lucia",
"Saint Vincent & the Grenadines",
"Samoa",
"San Marino",
"Sao Tome & Principe",
"Saudi Arabia",
"Senegal",
"Serbia",
"Seychelles",
"Sierra Leone",
"Singapore",
"Slovakia",
"Slovenia",
"Solomon Islands",
"Somalia",
"South Africa",
"South Sudan",
"Spain",
"Sri Lanka",
"Sudan",
"Suriname",
"Swaziland",
"Sweden",
"Switzerland",
"Syria",
"Taiwan",
"Tajikistan",
"Tanzania",
"Thailand",
"Togo",
"Tonga",
"Trinidad & Tobago",
"Tunisia",
"Turkey",
"Turkmenistan",
"Tuvalu",
"Uganda",
"Ukraine",
"United Arab Emirates",
"United Kingdom",
"United States",
"Uruguay",
"Uzbekistan",
"Vanuatu",
"Vatican City",
"Venezuela",
"Vietnam",
"Yemen",
"Zambia",
"Zimbabwe" ]

def populate():
    print("refresh charts")
    charts = []

    charts.append({
        "size" : "wholeSpan",
        "id" : "worldwide",
        "title" : "Zero",
        "type" : "map",
        "data" : [
            ['Country', 'Popularity'],
            ['Germany', 200],
            ['United States', 300],
            ['Brazil', 400],
            ['Canada', 500],
            ['France', 600],
            ['RU', 700],
        ],
    })
    charts.append({
        "size" : "oneThirdSpan",
        "id" : "chart1",
        "title" : current_country+" Closed Cases",
        "type" : "line",
        "data" : [
            ['Month', 'Recoveries', 'Deaths'],
            ["Mar", 1090, 520],
            ["Apr", 700, 400],
            ["May", 1170, 460],
            ["Jun", 660, 1120],
            ["Jul", 1030, 540],
            ["Aug", 1000, 400],
            ["Sep", 1170, 460],
            ["Oct", 660, 1120],
            ["Nov", 1030, 540],
        ],
    })
    charts.append({
        "size" : "oneThirdSpan",
        "id" : "chart3",
        "title" : "Total Deaths per Age Range",
        "type" : "pie",
        "data" : [
            ['Age Range', 'Deaths'],
            ["0-18", 1000],
            ["19-30", 100],
            ["31-45", 1170],
            ["46-65", 660],
            ["66+", 1030]
        ],
    })

    with open("./covid_site/static/covid_site/data.json", 'w') as f:
        json.dump(charts , f)

    return charts

def index(request):
    charts = populate()
    context = {}

    with open("./covid_site/static/covid_site/country.txt","r") as f:
        current_country = f.readlines()[0]

    if len(charts) > 0:
        context["charts"] = charts
        context["countries"] = countries
        context["current"] = current_country
    
    return render(request, 'covid_site/index.html', context)